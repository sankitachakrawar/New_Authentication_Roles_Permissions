server.port=8088

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/auth_roles_permissions
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.properties.hibernate.format_sql=true

#server.servlet.context-path=/api

jwt.secret= t>+l:Y%puW~oGl;
spring.main.allow-circular-references=true

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=demo83935@gmail.com
spring.mail.password=omcbnbmpfsklnuoc
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.lettuce.pool.max-active=7 
spring.redis.lettuce.pool.max-idle=7
spring.redis.lettuce.pool.min-idle=2

spring.cache.redis.cache-null-values=false
spring.cache.redis.time-to-live=600000
spring.cache.redis.use-key-prefix=true
spring.cache.type=redis 

#kafka configuration
spring.kafka.consumer.bootstrap-servers=${DATABASE_HOST}:9092
spring.kafka.consumer.group-id=bulkUpload

spring.kafka.bootstrap-servers: ${DATABASE_HOST}:9092
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: ${DATABASE_HOST}:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


spring.activemq.user=admin
spring.activemq.password=admin
spring.activemq.broker-url=tcp://localhost:61616

#file.upload-dir=${user.dir}\\src\\main\\resources\\public\\uploads
#spring.web.resources.static-locations[0]=file:src/main/resources/public/uploads/
#spring.web.resources.static-locations[1]=classpath:/public/uploads/
#spring.mvc.static-path-pattern = classpath:/public/uploads/

file.upload-dir=${user.dir}\\src\\main\\webapp\\upload

spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=215MB

#for swagger
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

server.error.whitelabel.enabled=false
spring.jpa.open-in-view=false

spring.datasource.hikari.maximum-pool-size=10
#for actuator
management.security.enabled=false
management.endpoints.web.exposure.include=*